# 7-base_geometry.txt

The ``7-base_geometry`` module
================================

Using ``BaseGeometry``
----------------------

Importing module and then testing class through interactive sessions.

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now test:

    >>> bg = BaseGeometry()

    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> bg.integer_validator("my_int", 12)

    >>> bg.integer_validator("width", 89)

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name", (4,))
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name", [3])
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name", {3, 4})
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("name", None)
    Traceback (most recent call last):
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ValueError: age must be greater than 0

    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ValueError: distance must be greater than 0

    >>> bg.integer_validator() # doctest: +ELLIPSIS
    Traceback (most recent call last):
    TypeError:...

    >>> bg.integer_validator("John") # doctest: +ELLIPSIS
    Traceback (most recent call last):
    TypeError:...
